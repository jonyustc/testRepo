@model List<GAMCUC.ViewModel.PaymentTypeViewModel>
@{
    ViewBag.Title = "StudentPaymentCollection";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    button.multiselect.dropdown-toggle.btn.btn-default {
        width: 220px;
    }
</style>

<div class="page-content">
    <!-- BEGIN PAGE HEADER-->
    <!-- BEGIN PAGE BAR -->
    <div class="page-bar">
        <h2>Student Payment</h2>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="portlet light bordered">

                <div class="portlet-body form">

                    @using (Html.BeginForm("StudentPaymentCollection", "Payment", new { area = "Students" }, FormMethod.Post))
                    {

                        <div class="form-horizontal">
                            <input type="hidden" name="StudentId" value="@ViewBag.StudentId" />

                            <table class="table table-bordered">
                                
                                @for (int i = 0; i < Model.Count - 1; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.CheckBoxFor(m => m[i].IsChecked, new { id = "chk_" + Model[i].Id })
                                            @Html.Label(Model[i].PaymentType)
                                            @Html.HiddenFor(m => m[i].PaymentType)
                                            @Html.HiddenFor(m => m[i].Id)
                                        </td>
                                        <td>
                                            <div class="form-inline">
                                                @Html.TextBoxFor(m => m[i].Amount, null, new { @class = "form-control", id = "txt_" + Model[i].Id })
                                                @if (Model[i].Id == 3)
                                                {
                                                    @Html.DropDownList("noMonth", ViewBag.SemesterList as IEnumerable<SelectListItem>, new { @class = "mt-multiselect form-control form-filter input-sm", multiple = "multiple" })
                                                    @Html.TextBox("MonthlyFeesToPay", null, new { @class = "form-control" })
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }

                                <tr>
                                    <th>Payable</th>
                                    <td>
                                        @Html.TextBox("TotalSemesterFees", (int)ViewBag.TotalSemesterFees, new { @class = "form-control Numeric" })
                                    </td>
                                </tr>
                                <tr id="scholarship">
                                    <th><input type="checkbox" value="8" name="ids" id="isDiscount" class="check" />Scholarship</th>
                                    <td> @Html.TextBox("Discount", 0, new { @class = "form-control Numeric" })</td>
                                </tr>
                                <tr id="cashDiv">
                                    <th>Total Payment</th>
                                    <td> @Html.TextBox("PaidAmount", 0, new { @class = "form-control Numeric" })</td>
                                </tr>
                                <tr>
                                    <th>Due Amount</th>
                                    <td> @Html.TextBox("Due", null, new { @class = "form-control Numeric", id = "Due" })</td>
                                </tr>
                                <tr>
                                    <th>Payment Method</th>
                                    <td> @Html.DropDownList("PaymentMethodId", ViewBag.PaymentMethodList as IEnumerable<SelectListItem>, "Select", new { @class = "form-control form-filter input-sm" })</td>
                                </tr>
                                <tr class="bankInfo" style="display:none">
                                    <th>Bank Name</th>
                                    <td> @Html.DropDownList("BankId", ViewBag.BankList as IEnumerable<SelectListItem>, "Select", new { @class = "form-control form-filter input-sm" })</td>
                                </tr>
                                <tr class="bankInfo" style="display:none">
                                    <th>Check No</th>
                                    <td>@Html.TextBox("CheckNo", null, new { @class = "form-control Numeric", placeholder = "Enter Check Number" })</td>
                                </tr>
                                <tr class="bankInfo" style="display:none">
                                    <th>Check Date</th>
                                    <td>@Html.TextBox("CheckDate", null, new { @class = "form-control date-picker", placeholder = "Enter Check Date" })</td>
                                </tr>
                                <tr>
                                    <th>Payment Date</th>
                                    <td>@Html.TextBox("PaymentDate", null, new { @class = "form-control date-picker" })</td>
                                </tr>

                                <tr>
                                    <td colspan="2" style="padding-left:40%"><input type="submit" value="Save" id="btnStdPayment" class="btn btn-success" /></td>
                                </tr>
                            </table>



                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script type="text/javascript">


        $('#noMonth').multiselect({
            includeSelectAllOption: true
        });

        $("#noMonth").on('change', function () {
            var sel = $("#noMonth").val();
            $.each(sel, function (key, value) {
                var myIndex = key + 1;
                var total = 0;
                total = myIndex * parseInt($('#txt_3').val());
                $('#MonthlyFeesToPay').val(total);
                //alert(key); // should come the text of each one
            });

        });

        var total = 0;
        var SumTotal = 0;
        var gSumTotal = 0;
        $(function () {
            $('.multiselect').prop('disabled', true);
            $("#txt_1,#txt_3,#MonthlyFeesToPay,#txt_2,#txt_4,#txt_5,#txt_6,#Discount,#PaidAmount").attr('readonly', true);
            $("#txt_1,#MonthlyFeesToPay,#SemesterFeesToPay,#txt_3,#txt_2,#txt_4,#txt_5,#txt_6,#Discount,#PaidAmount").keypress(function (event) {

                if (event.which == 8 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46)
                    return true;

                else if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57))
                    event.preventDefault();

            });


        });

        $('#chk_1').change(function () {

            $("#txt_1").prop("disabled", !$(this).is(':checked'));
            $("#txt_1").val();
        });

        $('#chk_3').change(function () {

            $("#noMonth").prop("disabled", !$(this).is(':checked'));
            $(".multiselect").prop("disabled", !$(this).is(':checked'));
            //$('.multiselect').prop('disabled', false);
            $("#MonthlyFeesToPay").val(0);
        });

        

        $('#chk_2').change(function () {

            $("#SemesterFeesToPay").prop("disabled", !$(this).is(':checked'));

            $("#txt_2").val();
        });
        $('#chk_4').change(function () {
            $("#txt_4").attr('readonly', false);
            //$("#ExamFees").prop("disabled", !$(this).is(':checked'));
            $("#txt_4").val();
        });
        $('#chk_5').change(function () {
            $("#txt_5").attr('readonly', false);
            //$("#BooksOthers").prop("disabled", !$(this).is(':checked'));
            $("#txt_5").val();
        });
        $('#chk_6').change(function () {
            $("#txt_6").attr('readonly', false);
            $("#txt_6").val();
        });

        $('#isDiscount').change(function () {

            $("#Discount").attr('readonly', false);
            $("#Discount").val(0);
        });




        var totalSemesterFee = parseFloat($("#TotalSemesterFees").val());
        $("#chk_1,#noMonth,#chk_2,#chk_3,#chk_4,#chk_5,#chk_6,#isDiscount,#PaidAmount,#Due").change(function () {
            var admission = 0;
            var monthly = 0;
            var semester = 0;
            var exam = 0;
            var book = 0;
            var late = 0;
            var partial = 0;
            var textCash = 0;
            var discount = 0;
            var dueamount = 0;

            var totalPayable = 0;

            if ($("#chk_3").is(":checked")) {
                monthly = parseFloat($("#MonthlyFeesToPay").val());

            }

            if ($("#chk_1").is(":checked")) {
                admission = parseFloat($("#txt_1").val());
            }

            if ($("#chk_2").is(":checked")) {
                semester = parseFloat($("#txt_2").val());
            }

            if ($("#chk_4").is(":checked")) {
                exam = parseFloat($("#txt_4").val());
            }
            if ($("#chk_5").is(":checked")) {
                book = parseFloat($("#txt_5").val());
            }

            if ($("#chk_6").is(":checked")) {
                late = parseFloat($("#txt_6").val());
            }


            if ($("#isDiscount").is(":checked")) {
                discount = parseFloat($("#Discount").val());
            }


            SumTotal = admission + semester + monthly + exam + book + late - discount;
            totalPayable = (totalSemesterFee +  exam + book + late) - discount;
            //$("#PaidAmount").val(SumTotal.toFixed(2))


            gSumTotal = totalPayable-discount;
            //$("#TotalSemesterFees").val();
            textCash = SumTotal;


            if (gSumTotal > 0 && textCash <= gSumTotal) {
                if (textCash <= gSumTotal) {
                    //$("#textCash").prop("disabled", false);
                    dueamount = gSumTotal - SumTotal;
                }
                else {
                    alert("please insert valid amount");
                    $("#PaidAmount").val(0);
                }
            }
            else {
                dueamount = gSumTotal - SumTotal;
                //$("#PaidAmount").prop("disabled", true);

            }

            $("#TotalSemesterFees").val(totalPayable.toFixed(2));
            $("#PaidAmount").val(SumTotal.toFixed(2));
            $("#Due").val(dueamount.toFixed(2))

        });

        $("#txt_4,#txt_5,#txt_6,#PaidAmount,#Discount").keyup(function () {

            var admission = 0;
            var monthly = 0;
            var gMonthly = 0;
            var semester = 0;
            var exam = 0;
            var book = 0;
            var late = 0;
            var partial = 0;
            var textCash = 0;
            var dueamount = 0;
            var discount = 0;
            var totalPayable = 0;

            if ($("#chk_3").is(":checked")) {
                monthly = parseFloat($("#MonthlyFeesToPay").val());
            }

            if ($("#chk_1").is(":checked")) {
                admission = parseFloat($("#txt_1").val());
            }

            if ($("#chk_2").is(":checked")) {
                semester = parseFloat($("#txt_2").val());
            }

            if ($("#chk_4").is(":checked")) {
                exam = parseFloat($("#txt_4").val());
            }
            if ($("#chk_5").is(":checked")) {
                book = parseFloat($("#txt_5").val());
            }


            if ($("#chk_6").is(":checked"))
                late = parseFloat($("#txt_6").val());


            if ($("#isDiscount").is(":checked")) {
                discount = parseFloat($("#Discount").val());
            }



            SumTotal = admission + semester + monthly + exam + book + late -discount;
            totalPayable = (totalSemesterFee +  exam + book + late) - discount;
            //$("#PaidAmount").val(SumTotal.toFixed(2))

            if ($("#PaidAmount").val().length > 0)
                textCash = parseFloat($("#PaidAmount").val());
            gSumTotal = totalPayable;
            //gSumTotal = $("#TotalSemesterFees").val();
            textCash = SumTotal;


            if (gSumTotal > 0 && textCash <= gSumTotal) {
                if (textCash <= gSumTotal) {
                    //$("#textCash").prop("disabled", false);
                    dueamount = gSumTotal - SumTotal;
                }
                else {
                    alert("please insert valid amount");
                    $("#PaidAmount").val(0);
                }
            }
            else {
                dueamount = gSumTotal - SumTotal;
                //$("#PaidAmount").prop("disabled", true);

            }

            $("#TotalSemesterFees").val(totalPayable.toFixed(2));
            $("#PaidAmount").val(SumTotal.toFixed(2));
            $("#Due").val(dueamount.toFixed(2))
        });


        $('#PaymentMethodId').change(function () {
            var optionSelected = $(this).find("option:selected");
            var valueSelected = optionSelected.val();
            if (valueSelected == 1) {
                $(".bankInfo").hide();
            }
            else {
                $(".bankInfo").show();
            }
        });


    </script>
}
